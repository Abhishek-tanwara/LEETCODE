/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 
 
 /* the approach to this question is that we need to check for three conditions 
 i) that both trees respective nodes should have same values
 ii)that their left subtrees should be same
 iii) that their right subtree should be same
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(p==NULL&&q==NULL)
            return true;
        if(p==NULL&&q!=NULL)
            return false;
        if(p!=NULL&&q==NULL)
            return false;
        bool c1,c2,c3;
        c1=p->val==q->val;
        c2=isSameTree(p->left,q->left);
        c3=isSameTree(p->right,q->right);
        return c1&&c2&&c3;
    }
};
